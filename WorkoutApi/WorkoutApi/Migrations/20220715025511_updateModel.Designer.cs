// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkoutApi.Data;

#nullable disable

namespace WorkoutApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220715025511_updateModel")]
    partial class updateModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WorkoutApi.Models.DifficultyLevel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ExercisId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExercisId");

                    b.ToTable("DifficultyLevels");
                });

            modelBuilder.Entity("WorkoutApi.Models.Exercis", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountSets")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DifficultyLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberOfRepetitions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeOfRelax")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("WorkoutApi.Models.ExercisOfDifficultyLevel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DifficultyLevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ExercisId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdDifficultyLevel")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdExercis")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyLevelId");

                    b.HasIndex("ExercisId");

                    b.ToTable("ExercisOfDifficultyLevels");
                });

            modelBuilder.Entity("WorkoutApi.Models.ExercisOfImg", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ExercisId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ImgId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ExercisId");

                    b.HasIndex("ImgId");

                    b.ToTable("ExercisOfImges");
                });

            modelBuilder.Entity("WorkoutApi.Models.ExercisOfMusclesGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ExercisId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdExercis")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdMusclesGroup")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MusclesGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ExercisId");

                    b.HasIndex("MusclesGroupId");

                    b.ToTable("ExercisOfMusclesGroups");
                });

            modelBuilder.Entity("WorkoutApi.Models.ExercisOfVidio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ExercisId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VidioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ExercisId");

                    b.HasIndex("VidioId");

                    b.ToTable("ExercisOfVidios");
                });

            modelBuilder.Entity("WorkoutApi.Models.Img", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Imges");
                });

            modelBuilder.Entity("WorkoutApi.Models.MusclesGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MusclesGroups");
                });

            modelBuilder.Entity("WorkoutApi.Models.Vidio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vidios");
                });

            modelBuilder.Entity("WorkoutApi.Models.WorkoutModels.Workout", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("WorkoutApi.Models.WorkoutModels.WorkoutOfExercis", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ExercisId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WorkoutId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ExercisId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("WorkoutOfExercises");
                });

            modelBuilder.Entity("WorkoutApi.Models.DifficultyLevel", b =>
                {
                    b.HasOne("WorkoutApi.Models.Exercis", null)
                        .WithMany("DifficultyLevels")
                        .HasForeignKey("ExercisId");
                });

            modelBuilder.Entity("WorkoutApi.Models.ExercisOfDifficultyLevel", b =>
                {
                    b.HasOne("WorkoutApi.Models.DifficultyLevel", "DifficultyLevel")
                        .WithMany()
                        .HasForeignKey("DifficultyLevelId");

                    b.HasOne("WorkoutApi.Models.Exercis", "Exercis")
                        .WithMany()
                        .HasForeignKey("ExercisId");

                    b.Navigation("DifficultyLevel");

                    b.Navigation("Exercis");
                });

            modelBuilder.Entity("WorkoutApi.Models.ExercisOfImg", b =>
                {
                    b.HasOne("WorkoutApi.Models.Exercis", "Exercis")
                        .WithMany("Img")
                        .HasForeignKey("ExercisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkoutApi.Models.Img", "Img")
                        .WithMany()
                        .HasForeignKey("ImgId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercis");

                    b.Navigation("Img");
                });

            modelBuilder.Entity("WorkoutApi.Models.ExercisOfMusclesGroup", b =>
                {
                    b.HasOne("WorkoutApi.Models.Exercis", "Exercis")
                        .WithMany("MusclesGroupOfWorkouts")
                        .HasForeignKey("ExercisId");

                    b.HasOne("WorkoutApi.Models.MusclesGroup", "MusclesGroup")
                        .WithMany()
                        .HasForeignKey("MusclesGroupId");

                    b.Navigation("Exercis");

                    b.Navigation("MusclesGroup");
                });

            modelBuilder.Entity("WorkoutApi.Models.ExercisOfVidio", b =>
                {
                    b.HasOne("WorkoutApi.Models.Exercis", "Exercis")
                        .WithMany("Vidio")
                        .HasForeignKey("ExercisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkoutApi.Models.Vidio", "Vidio")
                        .WithMany()
                        .HasForeignKey("VidioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercis");

                    b.Navigation("Vidio");
                });

            modelBuilder.Entity("WorkoutApi.Models.WorkoutModels.WorkoutOfExercis", b =>
                {
                    b.HasOne("WorkoutApi.Models.Exercis", "Exercis")
                        .WithMany()
                        .HasForeignKey("ExercisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkoutApi.Models.WorkoutModels.Workout", "Workout")
                        .WithMany("WorkoutOfExercises")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercis");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("WorkoutApi.Models.Exercis", b =>
                {
                    b.Navigation("DifficultyLevels");

                    b.Navigation("Img");

                    b.Navigation("MusclesGroupOfWorkouts");

                    b.Navigation("Vidio");
                });

            modelBuilder.Entity("WorkoutApi.Models.WorkoutModels.Workout", b =>
                {
                    b.Navigation("WorkoutOfExercises");
                });
#pragma warning restore 612, 618
        }
    }
}
